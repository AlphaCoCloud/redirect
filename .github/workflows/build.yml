name: Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux:
    name: Linux â€¢ ${{ matrix.target }}
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]

    env:
      # Ensure the aarch64 target uses the cross linker
      CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy,rustfmt
          targets: ${{ matrix.target }}

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake ninja-build nasm pkg-config \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross

      - name: Cache Rust build
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.target }}
          cache-on-failure: true

      - name: Cargo fmt (check)
        run: cargo fmt --all -- --check

      - name: Clippy (deny warnings)
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Build (release)
        run: cargo build --workspace --all-features --release --target ${{ matrix.target }}
